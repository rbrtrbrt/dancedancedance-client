const styleProps = [
  'width,',
  'height',
  'position',
  'left,',
  'top,',
  'right,',
  'bottom',
  'margin-bottom,',
  'margin-left,',
  'margin-right,',
  'margin-top',
  'padding-bottom,',
  'padding-left,',
  'padding-right,',
  'padding-top',
  // "animation-delay",
  // "animation-direction",
  // "animation-duration",
  // "animation-fill-mode",
  // "animation-iteration-count",
  // "animation-name",
  // "animation-play-state",
  // "animation-timing-function",
  // "background-attachment",
  // "background-blend-mode",
  // "background-clip",
  // "background-color",
  // "background-image",
  // "background-origin",
  // "background-position",
  // "background-repeat",
  // "background-size",
  // "border-bottom-color",
  // "border-bottom-left-radius",
  // "border-bottom-right-radius",
  // "border-bottom-style",
  'border-bottom-width,',
  // "border-collapse",
  // "border-image-outset",
  // "border-image-repeat",
  // "border-image-slice",
  // "border-image-source",
  // "border-image-width",
  // "border-left-color",
  // "border-left-style",
  'border-left-width,',
  // "border-right-color",
  // "border-right-style",
  'border-right-width,',
  // "border-top-color",
  // "border-top-left-radius",
  // "border-top-right-radius",
  // "border-top-style",
  'border-top-width',
  'transform',
  // "box-shadow",
  'box-sizing',
  // "break-after",
  // "break-before",
  // "break-inside",
  // "caption-side",
  // "clear",
  // "clip",
  // "color",
  'content',
  // "cursor",
  // "direction",
  'display',
  // "empty-cells",
  'float',
  "font-family,",
  // "font-kerning",
  'font-size,',
  // "font-stretch",
  "font-style,",
  // "font-variant",
  // "font-variant-ligatures",
  // "font-variant-caps",
  // "font-variant-numeric",
  'font-weight',
  // "image-rendering",
  // "isolation",
  // "justify-items",
  // "justify-self",
  // "letter-spacing",
  'line-height',
  // "list-style-image",
  // "list-style-position",
  // "list-style-type",
  'max-height,',
  'min-height',
  'max-width,',
  'min-width',
  // "mix-blend-mode",
  // "object-fit",
  // "object-position",
  // "offset-distance",
  // "offset-path",
  // "offset-rotate",
  // "opacity",
  // "orphans",
  // "outline-color",
  'outline-offset,',
  'outline-style,',
  'outline-width,',
  // "overflow-anchor",
  // "overflow-wrap",
  'overflow-x,',
  'overflow-y',
  // "pointer-events",
  // "resize",
  'scroll-behavior',
  // "speak",
  // "table-layout",
  // "tab-size",
  'text-align',
  // "text-align-last",
  // "text-decoration",
  // "text-decoration-line",
  // "text-decoration-style",
  // "text-decoration-color",
  // "text-decoration-skip",
  // "text-underline-position",
  // "text-indent",
  // "text-rendering",
  // "text-shadow",
  // "text-size-adjust",
  // "text-overflow",
  // "text-transform",
  // "touch-action",
  // "transition-delay",
  // "transition-duration",
  // "transition-property",
  // "transition-timing-function",
  // "unicode-bidi",
  // "vertical-align",
  'visibility',
  'white-space',
  // "widows",
  // "will-change",
  // "word-break",
  // "word-spacing",
  // "word-wrap",
  'z-index',
  'zoom',
  // "-webkit-appearance",
  // "backface-visibility",
  // "-webkit-background-clip",
  // "-webkit-background-origin",
  // "-webkit-border-horizontal-spacing",
  // "-webkit-border-image",
  // "-webkit-border-vertical-spacing",
  // "-webkit-box-align",
  // "-webkit-box-decoration-break",
  // "-webkit-box-direction",
  // "-webkit-box-flex",
  // "-webkit-box-flex-group",
  // "-webkit-box-lines",
  // "-webkit-box-ordinal-group",
  // "-webkit-box-orient",
  // "-webkit-box-pack",
  // "-webkit-box-reflect",
  // "column-count",
  // "column-gap",
  // "column-rule-color",
  // "column-rule-style",
  // "column-rule-width",
  // "column-span",
  // "column-width",
  'align-content,',
  'align-items,',
  'align-self',
  // "flex-basis",
  // "flex-grow",
  // "flex-shrink",
  'flex-direction,',
  'flex-wrap,',
  'justify-content',
  // "-webkit-font-smoothing",
  // "grid-auto-columns",
  // "grid-auto-flow",
  // "grid-auto-rows",
  // "grid-column-end",
  // "grid-column-start",
  // "grid-template-areas",
  // "grid-template-columns",
  // "grid-template-rows",
  // "grid-row-end",
  // "grid-row-start",
  // "grid-column-gap",
  // "grid-row-gap",
  // "-webkit-highlight",
  // "hyphens",
  // "-webkit-hyphenate-character",
  // "-webkit-line-break",
  // "-webkit-line-clamp",
  // "-webkit-locale",
  // "-webkit-margin-before-collapse",
  // "-webkit-margin-after-collapse",
  // "-webkit-mask-box-image",
  // "-webkit-mask-box-image-outset",
  // "-webkit-mask-box-image-repeat",
  // "-webkit-mask-box-image-slice",
  // "-webkit-mask-box-image-source",
  // "-webkit-mask-box-image-width",
  // "-webkit-mask-clip",
  // "-webkit-mask-composite",
  // "-webkit-mask-image",
  // "-webkit-mask-origin",
  // "-webkit-mask-position",
  // "-webkit-mask-repeat",
  // "-webkit-mask-size",
  // "order",
  // "perspective",
  // "perspective-origin",
  // "-webkit-print-color-adjust",
  // "-webkit-rtl-ordering",
  // "shape-outside",
  // "shape-image-threshold",
  // "shape-margin",
  // "-webkit-tap-highlight-color",
  // "-webkit-text-combine",
  // "-webkit-text-decorations-in-effect",
  // "-webkit-text-emphasis-color",
  // "-webkit-text-emphasis-position",
  // "-webkit-text-emphasis-style",
  // "-webkit-text-fill-color",
  // "-webkit-text-orientation",
  // "-webkit-text-security",
  // "-webkit-text-stroke-color",
  // "-webkit-text-stroke-width",
  // "transform-origin",
  // "transform-style",
  // "user-select",
  // "-webkit-user-drag",
  // "-webkit-user-modify",
  // "-webkit-writing-mode",
  // "-webkit-app-region",
];

export function logStyles(element, label = undefined, styles = styleProps) {
  if (!element)
    return;
  if( typeof label == 'object' ) {
    styles = label;
    label = undefined;
  }
  let logLine = [];
  let allLines = [];
  label = label || element.id || "« no label »";
  let computed = window.getComputedStyle(element);
  console.log('Styles for ' + label + ':');
  for (let key of styleProps) {
    let keepLine = key.endsWith(',');
    if (keepLine) {
      key = key.slice(0, -1);
    }
    logLine.push(key + ': ' + computed[key]);
    if (!keepLine) {
      allLines.push('  ' + logLine.join(', '));
      logLine = [];
    }
  }
  console.log(allLines.join("\n"));
  console.log('end styles for' + label + '.');
}
